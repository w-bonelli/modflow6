# preprocessing 
command = [
  'fypp',
  meson.project_source_root() / 'src' / 'ModelsCreate.fypp',
  meson.project_source_root() / 'src' / 'ModelsCreate.f90'
]
configure_file(
  command: command,
  input: 'ModelsCreate.fypp',
  output: 'ModelsCreate.f90')

external_libraries = files(
    'Utilities' / 'Libraries' / 'daglib' / 'dag_module.f90',
    'Utilities' / 'Libraries' / 'rcm' / 'rcm.f90',
    'Utilities' / 'Libraries' / 'sparsekit' / 'sparsekit.f90',
    'Utilities' / 'Libraries' / 'blas' / 'blas1_d.f90',
    'Utilities' / 'Libraries' / 'sparskit2' / 'ilut.f90',
)

modflow_sources = files(
    'Distributed' / 'IndexMap.f90',
    'Distributed' / 'InterfaceMap.f90',
    'Distributed' / 'Mapper.f90',
    'Distributed' / 'MappedMemory.f90',
    'Distributed' / 'RouterBase.f90',
    'Distributed' / 'RouterFactory.F90',
    'Distributed' / 'SerialRouter.f90',
    'Distributed' / 'VirtualBase.f90',
    'Distributed' / 'VirtualDataContainer.f90',
    'Distributed' / 'VirtualDataLists.f90',
    'Distributed' / 'VirtualDataManager.f90',
    'Distributed' / 'VirtualExchange.f90',    
    'Distributed' / 'VirtualGwfExchange.f90',
    'Distributed' / 'VirtualGwtExchange.f90',
    'Distributed' / 'VirtualModel.f90',
    'Distributed' / 'VirtualGwfModel.f90',
    'Distributed' / 'VirtualGwtModel.f90',
    'Distributed' / 'VirtualSolution.f90',
    'Exchange' / 'BaseExchange.f90',
    'Exchange' / 'DisConnExchange.f90',
    'Exchange' / 'GhostNode.f90',
    'Exchange' / 'GwfGwfExchange.f90',
    'Exchange' / 'GwfGwtExchange.f90',
    'Exchange' / 'GwtGwtExchange.f90',
    'Exchange' / 'NumericalExchange.f90',
    'Exchange' / 'gwfgwfidm.f90',
    'Exchange' / 'gwfgwtidm.f90',
    'Exchange' / 'gwtgwtidm.f90',
    'Model' / 'Connection' / 'ConnectionBuilder.f90',
    'Model' / 'Connection' / 'CellWithNbrs.f90',
    'Model' / 'Connection' / 'CsrUtils.f90',
    'Model' / 'Connection' / 'GridConnection.f90',
    'Model' / 'Connection' / 'GridSorting.f90',
    'Model' / 'Connection' / 'GwfGwfConnection.f90',
    'Model' / 'Connection' / 'GwtGwtConnection.f90',
    'Model' / 'Connection' / 'GwfInterfaceModel.f90',
    'Model' / 'Connection' / 'GwtInterfaceModel.f90',
    'Model' / 'Connection' / 'SpatialModelConnection.f90',
    'Model' / 'Connection' / 'DistributedVariable.f90',
    'Model' / 'Geometry' / 'BaseGeometry.f90',
    'Model' / 'Geometry' / 'CircularGeometry.f90',
    'Model' / 'Geometry' / 'RectangularGeometry.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3api8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3buy8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3chd8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3chd8idm.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3csub8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3dis8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3dis8idm.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3disu8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3disu8idm.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3disv8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3disv8idm.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3drn8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3drn8idm.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3evt8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3evt8idm.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3evta8idm.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3ghb8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3ghb8idm.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3hfb8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3ic8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3ic8idm.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3idm.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3lak8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3maw8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3mvr8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3npf8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3npf8idm.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3obs8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3oc8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3rch8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3rch8idm.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3rcha8idm.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3riv8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3riv8idm.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3sfr8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3sto8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3tvbase8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3tvk8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3tvs8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3uzf8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3vsc8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3wel8.f90',
    'Model' / 'GroundWaterFlow' / 'gwf3wel8idm.f90',
    'Model' / 'GroundWaterTransport' / 'gwt1.f90',
    'Model' / 'GroundWaterTransport' / 'gwt1cnc1.f90',
    'Model' / 'GroundWaterTransport' / 'gwt1cnc1idm.f90',
    'Model' / 'GroundWaterTransport' / 'gwt1dis1idm.f90',
    'Model' / 'GroundWaterTransport' / 'gwt1disu1idm.f90',
    'Model' / 'GroundWaterTransport' / 'gwt1disv1idm.f90',
    'Model' / 'GroundWaterTransport' / 'gwt1dsp1.f90',
    'Model' / 'GroundWaterTransport' / 'gwt1dsp1idm.f90',
    'Model' / 'GroundWaterTransport' / 'gwt1ic1idm.f90',
    'Model' / 'GroundWaterTransport' / 'gwt1idm.f90',
    'Model' / 'GroundWaterTransport' / 'gwt1ist1.f90',
    'Model' / 'GroundWaterTransport' / 'gwt1lkt1.f90',
    'Model' / 'GroundWaterTransport' / 'gwt1mst1.f90',
    'Model' / 'GroundWaterTransport' / 'gwt1mwt1.f90',
    'Model' / 'GroundWaterTransport' / 'gwt1sft1.f90',
    'Model' / 'GroundWaterTransport' / 'gwt1src1.f90',
    'Model' / 'GroundWaterTransport' / 'gwt1uzt1.f90',
    'Model' / 'ModelUtilities' / 'BoundaryPackage.f90',
    'Model' / 'ModelUtilities' / 'BoundaryPackageExt.f90',
    'Model' / 'ModelUtilities' / 'Connections.f90',
    'Model' / 'ModelUtilities' / 'DiscretizationBase.f90',
    'Model' / 'ModelUtilities' / 'DisvGeom.f90',
    'Model' / 'ModelUtilities' / 'FlowModelInterface.f90',
    'Model' / 'ModelUtilities' / 'GwfBuyInputData.f90',
    'Model' / 'ModelUtilities' / 'GwfMvrPeriodData.f90',
    'Model' / 'ModelUtilities' / 'GwfNpfOptions.f90',
    'Model' / 'ModelUtilities' / 'GwfStorageUtils.f90',
    'Model' / 'ModelUtilities' / 'GwfVscInputData.f90',
    'Model' / 'ModelUtilities' / 'GwtDspOptions.f90',
    'Model' / 'ModelUtilities' / 'GwtSpc.f90',
    'Model' / 'ModelUtilities' / 'ModelPackageInput.f90',
    'Model' / 'ModelUtilities' / 'Mover.f90',
    'Model' / 'ModelUtilities' / 'PackageMover.f90',
    'Model' / 'ModelUtilities' / 'SfrCrossSectionManager.f90',
    'Model' / 'ModelUtilities' / 'SfrCrossSectionUtils.f90',
    'Model' / 'ModelUtilities' / 'TspAdvOptions.f90',
    'Model' / 'ModelUtilities' / 'UzfCellGroup.f90',
    'Model' / 'ModelUtilities' / 'Xt3dAlgorithm.f90',
    'Model' / 'ModelUtilities' / 'Xt3dInterface.f90',
    'Model' / 'TransportModel' / 'tsp1.f90',
    'Model' / 'TransportModel' / 'tsp1adv1.f90',
    'Model' / 'TransportModel' / 'tsp1apt1.f90',
    'Model' / 'TransportModel' / 'tsp1fmi1.f90',
    'Model' / 'TransportModel' / 'tsp1ic1.f90',
    'Model' / 'TransportModel' / 'tsp1obs1.f90',
    'Model' / 'TransportModel' / 'tsp1oc1.f90',
    'Model' / 'TransportModel' / 'tsp1mvt1.f90',
    'Model' / 'TransportModel' / 'tsp1ssm1.f90',
    'Model' / 'BaseModel.f90',
    'Model' / 'ExplicitModel.f90',
    'Model' / 'NumericalModel.f90',
    'Model' / 'NumericalPackage.f90',
    'Solution' / 'ConvergenceSummary.f90',
    'Solution' / 'LinearMethods' / 'ImsLinearSettings.f90',
    'Solution' / 'LinearMethods' / 'ims8base.f90',
    'Solution' / 'LinearMethods' / 'ims8linear.f90',
    'Solution' / 'LinearMethods' / 'ims8reordering.f90',
    'Solution' / 'LinearMethods' / 'ims8misc.f90',
    'Solution' / 'LinearMethods' / 'ImsLinearSolver.f90',
    'Solution' / 'BaseSolution.f90',
    'Solution' / 'ExplicitSolution.f90',
    'Solution' / 'LinearSolverBase.f90',
    'Solution' / 'LinearSolverFactory.F90',
    'Solution' / 'NumericalSolution.f90',
    'Solution' / 'SolutionFactory.F90',
    'Solution' / 'SolutionGroup.f90',
    'Timing' / 'ats.f90',
    'Timing' / 'tdis.f90',
    'Utilities' / 'ArrayRead' / 'ArrayReaderBase.f90',
    'Utilities' / 'ArrayRead' / 'Double1dReader.f90',
    'Utilities' / 'ArrayRead' / 'Double2dReader.f90',
    'Utilities' / 'ArrayRead' / 'Integer1dReader.f90',
    'Utilities' / 'ArrayRead' / 'Integer2dReader.f90',
    'Utilities' / 'ArrayRead' / 'LayeredArrayReader.f90',
    'Utilities' / 'Idm' / 'BoundInputContext.f90',
    'Utilities' / 'Idm' / 'DefinitionSelect.f90',
    'Utilities' / 'Idm' / 'IdmLoad.f90',
    'Utilities' / 'Idm' / 'IdmLogger.f90',
    'Utilities' / 'Idm' / 'InputDefinition.f90',
    'Utilities' / 'Idm' / 'InputLoadType.f90',
    'Utilities' / 'Idm' / 'ModelPackageInputs.f90',
    'Utilities' / 'Idm' / 'ModflowInput.f90',
    'Utilities' / 'Idm' / 'SourceCommon.f90',
    'Utilities' / 'Idm' / 'SourceLoad.F90',
    'Utilities' / 'Idm' / 'mf6blockfile' / 'AsciiInputLoadType.f90',
    'Utilities' / 'Idm' / 'mf6blockfile' / 'IdmMf6File.f90',
    'Utilities' / 'Idm' / 'mf6blockfile' / 'LoadMf6File.f90',
    'Utilities' / 'Idm' / 'mf6blockfile' / 'StressGridInput.f90',
    'Utilities' / 'Idm' / 'mf6blockfile' / 'StressListInput.f90',
    'Utilities' / 'Idm' / 'mf6blockfile' / 'StructArray.f90',
    'Utilities' / 'Idm' / 'mf6blockfile' / 'StructVector.f90',
    'Utilities' / 'Idm' / 'selector' / 'IdmDfnSelector.f90',
    'Utilities' / 'Idm' / 'selector' / 'IdmExgDfnSelector.f90',
    'Utilities' / 'Idm' / 'selector' / 'IdmGwfDfnSelector.f90',
    'Utilities' / 'Idm' / 'selector' / 'IdmGwtDfnSelector.f90',
    'Utilities' / 'Idm' / 'selector' / 'IdmSimDfnSelector.f90',
    'Utilities' / 'Matrix' / 'MatrixBase.f90',
    'Utilities' / 'Matrix' / 'SparseMatrix.f90',
    'Utilities' / 'Memory' / 'Memory.f90',
    'Utilities' / 'Memory' / 'MemoryHelper.f90',
    'Utilities' / 'Memory' / 'MemoryList.f90',
    'Utilities' / 'Memory' / 'MemoryManager.f90',
    'Utilities' / 'Memory' / 'MemoryManagerExt.f90',
    'Utilities' / 'Memory' / 'MemorySetHandler.f90',
    'Utilities' / 'Observation' / 'Obs3.f90',
    'Utilities' / 'Observation' / 'ObsContainer.f90',
    'Utilities' / 'Observation' / 'Observe.f90',
    'Utilities' / 'Observation' / 'ObsOutput.f90',
    'Utilities' / 'Observation' / 'ObsOutputList.f90',
    'Utilities' / 'Observation' / 'ObsUtility.f90',
    'Utilities' / 'OutputControl' / 'OutputControl.f90',
    'Utilities' / 'OutputControl' / 'OutputControlData.f90',
    'Utilities' / 'OutputControl' / 'PrintSaveManager.f90',
    'Utilities' / 'TimeSeries' / 'TimeArray.f90',
    'Utilities' / 'TimeSeries' / 'TimeArraySeries.f90',
    'Utilities' / 'TimeSeries' / 'TimeArraySeriesLink.f90',
    'Utilities' / 'TimeSeries' / 'TimeArraySeriesManager.f90',
    'Utilities' / 'TimeSeries' / 'TimeSeries.f90',
    'Utilities' / 'TimeSeries' / 'TimeSeriesFileList.f90',
    'Utilities' / 'TimeSeries' / 'TimeSeriesLink.f90',
    'Utilities' / 'TimeSeries' / 'TimeSeriesManager.f90',
    'Utilities' / 'TimeSeries' / 'TimeSeriesRecord.f90',
    'Utilities' / 'Vector' / 'VectorBase.f90',
    'Utilities' / 'Vector' / 'SeqVector.f90',
    'Utilities' / 'ArrayHandlers.f90',
    'Utilities' / 'ArrayReaders.f90',
    'Utilities' / 'BlockParser.f90',
    'Utilities' / 'Budget.f90',
    'Utilities' / 'BudgetFileReader.f90',
    'Utilities' / 'BudgetObject.f90',
    'Utilities' / 'BudgetTerm.f90',
    'Utilities' / 'CharString.f90',
    'Utilities' / 'comarg.f90',
    'Utilities' / 'compilerversion.F90',
    'Utilities' / 'Constants.f90',
    'Utilities' / 'defmacro.F90',
    'Utilities' / 'DevFeature.f90',
    'Utilities' / 'ErrorUtil.f90',
    'Utilities' / 'GeomUtil.f90',
    'Utilities' / 'HashTable.f90',
    'Utilities' / 'HeadFileReader.f90',
    'Utilities' / 'InputOutput.f90',
    'Utilities' / 'Iunit.f90',
    'Utilities' / 'kind.f90',
    'Utilities' / 'List.f90',
    'Utilities' / 'ListReader.f90',
    'Utilities' / 'LongLineReader.f90',
    'Utilities' / 'MathUtil.f90',
    'Utilities' / 'Message.f90',
    'Utilities' / 'OpenSpec.f90',
    'Utilities' / 'PackageBudget.f90',
    'Utilities' / 'Sim.f90',
    'Utilities' / 'SimStages.f90',
    'Utilities' / 'SimVariables.f90',
    'Utilities' / 'SmoothingFunctions.f90',
    'Utilities' / 'sort.f90',
    'Utilities' / 'Sparse.f90',    
    'Utilities' / 'STLVecInt.f90',
    'Utilities' / 'StringList.f90',
    'Utilities' / 'Table.f90',
    'Utilities' / 'TableTerm.f90',
    'Utilities' / 'Timer.f90',
    'Utilities' / 'version.f90',
    'mf6core.f90',
    'mf6lists.f90',
    'simnamidm.f90',
    'ModelsCreate.f90',
    'SimulationCreate.f90',
    'RunControl.f90',
    'RunControlFactory.F90'
)

modflow_petsc_sources = files(
  'Utilities' / 'Vector' / 'PetscVector.F90',
  'Utilities' / 'Matrix' / 'PetscMatrix.F90',
  'Solution' / 'PETSc' / 'PetscSolver.F90',
  'Solution' / 'PETSc' / 'PetscConvergence.F90',
  'Solution' / 'PETSc' / 'PetscImsPreconditioner.F90'
)

modflow_mpi_sources = files(
  'Distributed' / 'MpiMessageBuilder.f90',
  'Distributed' / 'MpiRouter.f90',
  'Distributed' / 'MpiRunControl.F90',
  'Distributed' / 'MpiWorld.f90',
  'Solution' / 'ParallelSolution.f90'
)

if with_petsc
  modflow_sources += modflow_petsc_sources  
endif

if with_mpi
  modflow_sources += modflow_mpi_sources
endif

mf6_external = static_library('mf6_external', external_libraries)

message('MODFLOW 6 executable name: ' + buildname)

if build_machine.system() == 'windows' and with_petsc
  mf6core = static_library('mf6core', 
                           modflow_sources, 
                           dependencies:  dependencies, 
                           link_with: [mf6_external], 
                           include_directories: petsc_incdir)
  mf6exe = executable(buildname,
                      'mf6.f90', 
                      link_with: [mf6core],
                      dependencies: dependencies, 
                      install: true)
else
  mf6core = static_library('mf6core', 
                           modflow_sources,  
                           dependencies: dependencies,
                           link_with: [mf6_external])
  mf6exe = executable(buildname, 
                      'mf6.f90', 
                      link_with: [mf6core],  
                      dependencies: dependencies, 
                      install: true)
endif
