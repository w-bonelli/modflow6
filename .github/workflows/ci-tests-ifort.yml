# Parts of configuration file are based on the examples in this repository:
# https://github.com/oneapi-src/oneapi-ci
#
# Which have the following copyright:
# SPDX-FileCopyrightText: 2020 Intel Corporation
#
# SPDX-License-Identifier: MIT

name: tests - ifort

on:
  push:
    branches:
      - develop
      - test*
  pull_request:
    branches:
      - develop
      - test*

env:
  FC: ifort

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2.3.4

      - name: Install Conda environment
        uses: mamba-org/provision-with-micromamba@main
        with:
            cache-downloads: true
            cache-env: true

      - name: Print Python package versions
        run: |
          pip list

      - name: Install ifort
        uses: modflowpy/install-intelfortran-action@v1

      - name: Test makefiles
        if: runner.os == 'Linux' || runner.os == 'macOS'
        working-directory: ./distribution
        run: |
          pytest -v -n=auto build_makefiles.py

      - name: Set and print branch name
        run: |
          .github/common/git-branch-export.sh

      - name: Get regression test files
        run: |
          .github/common/get-regression-files.sh

      - name: Check out regression test branch
        run: |
          .github/common/checkout-regression-branch.sh

      - name: Update flopy
        run: |
          .github/common/update-flopy.sh

      - name: Build modflow6
        if: runner.os != 'Windows'
        run: |
          meson setup builddir -Ddebug=false --prefix=$(pwd) --libdir=bin
          meson install -C builddir
          meson test --verbose --no-rebuild -C builddir
          cd autotest
          pytest -v --durations=0 get_exes.py

      - name: Build modflow6 (Windows)
        if: runner.os == 'Windows'
        run: |
          # activating micromamba environment causes default link.exe to be found instead of MSVC linker
          export PATH="/C/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Tools/MSVC/14.33.31629/bin/Hostx64/x64":$PATH
          
          meson setup builddir -Ddebug=false --prefix=$(pwd) --libdir=bin
          meson install -C builddir
          meson test --verbose --no-rebuild -C builddir
          cd autotest
          pytest -v --durations=0 get_exes.py

      - name: Test applications
        working-directory: autotest
        run: |
          pytest -v -n=auto --durations=0